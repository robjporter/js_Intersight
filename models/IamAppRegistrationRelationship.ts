/**
 * Cisco Intersight
 * Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations. The Intersight OpenAPI document defines the complete set of properties that are returned in the HTTP response. From that perspective, a client can expect that no additional properties are returned, unless these properties are explicitly defined in the OpenAPI document. However, when a client uses an older version of the Intersight OpenAPI document, the server may send additional properties because the software is more recent than the client. In that case, the client may receive properties that it does not know about. Some generated SDKs perform a strict validation of the HTTP response body against the OpenAPI document. This document was created on 2020-05-14T14:50:55-07:00.
 *
 * OpenAPI spec version: 1.0.9-1731
 * Contact: intersight@cisco.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { IamAccountRelationship } from './IamAccountRelationship';
import { IamAppRegistration } from './IamAppRegistration';
import { IamOAuthTokenRelationship } from './IamOAuthTokenRelationship';
import { IamPermissionRelationship } from './IamPermissionRelationship';
import { IamRoleRelationship } from './IamRoleRelationship';
import { IamUserRelationship } from './IamUserRelationship';
import { MoBaseMoRelationship } from './MoBaseMoRelationship';
import { MoMoRef } from './MoMoRef';
import { MoTag } from './MoTag';
import { MoVersionContext } from './MoVersionContext';
import { HttpFile } from '../http/http';

/**
* A relationship to the 'iam.AppRegistration' resource, or the expanded 'iam.AppRegistration' resource, or the 'null' value.
*/
export class IamAppRegistrationRelationship {
    /**
    * The Account ID for this managed object.
    */
    'accountMoid'?: string;
    /**
    * The concrete type of this complex type. Its value must be the same as the 'objectType' property. The OpenAPI document references this property as a discriminator value.
    */
    'classId': string;
    /**
    * The time when this managed object was created.
    */
    'createTime'?: Date;
    /**
    * The DomainGroup ID for this managed object.
    */
    'domainGroupMoid'?: string;
    /**
    * The time when this managed object was last modified.
    */
    'modTime'?: Date;
    /**
    * The unique identifier of this Managed Object instance.
    */
    'moid'?: string;
    /**
    * The fully-qualified type of this managed object, i.e. the class name. This property is optional. The ObjectType is implied from the URL path. If specified, the value of objectType must match the class name specified in the URL path.
    */
    'objectType': string;
    'owners'?: Array<string>;
    /**
    * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally available to all end users or restricted to end users based on their license entitlement. Users can use this property to differentiate the scope (global or a specific license tier) to which a shared MO belongs.
    */
    'sharedScope'?: string;
    'tags'?: Array<MoTag>;
    'versionContext'?: MoVersionContext;
    /**
    * An array of relationships to moBaseMo resources.
    */
    'ancestors'?: Array<MoBaseMoRelationship>;
    'parent'?: MoBaseMoRelationship;
    /**
    * An array of relationships to moBaseMo resources.
    */
    'permissionResources'?: Array<MoBaseMoRelationship>;
    /**
    * a map of display names for a resource.
    */
    'displayNames'?: { [key: string]: Array<string>; };
    /**
    * A unique identifier for the OAuth2 client application. The client ID is auto-generated when the AppRegistration object is created.
    */
    'clientId'?: string;
    /**
    * App Registration name specified by user.
    */
    'clientName'?: string;
    /**
    * The OAuth2 client secret. The value of this property is generated when grantType includes 'client-credentials'. Otherwise, no client-secret is generated.
    */
    'clientSecret'?: string;
    /**
    * The type of the OAuth2 client (public or confidential), as specified in https://tools.ietf.org/html/rfc6749#section-2.1.
    */
    'clientType'?: IamAppRegistrationRelationshipClientTypeEnum;
    /**
    * Description of the application.
    */
    'description'?: string;
    'grantTypes'?: Array<IamAppRegistrationRelationshipGrantTypesEnum>;
    'redirectUris'?: Array<string>;
    /**
    * Set value to true to renew the client-secret. Applicable to client_credentials grant type.
    */
    'renewClientSecret'?: boolean;
    'responseTypes'?: Array<IamAppRegistrationRelationshipResponseTypesEnum>;
    /**
    * Used to perform revocation for tokens of AppRegistration. Updated only internally is case Revoke property come from UI with value true. On each request with OAuth2 access token the CreationTime of the OAuth2 token will be compared to RevokationTimestamp of the corresponding App Registration.
    */
    'revocationTimestamp'?: Date;
    /**
    * Used to trigger update the revocationTimestamp value. If UI sent updating request with the Revoke value is true, then update RevocationTimestamp.
    */
    'revoke'?: boolean;
    'account'?: IamAccountRelationship;
    /**
    * An array of relationships to iamOAuthToken resources.
    */
    'oauthTokens'?: Array<IamOAuthTokenRelationship>;
    'permission'?: IamPermissionRelationship;
    /**
    * An array of relationships to iamRole resources.
    */
    'roles'?: Array<IamRoleRelationship>;
    'user'?: IamUserRelationship;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "accountMoid",
            "baseName": "AccountMoid",
            "type": "string",
            "format": ""
        },
        {
            "name": "classId",
            "baseName": "ClassId",
            "type": "string",
            "format": ""
        },
        {
            "name": "createTime",
            "baseName": "CreateTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "domainGroupMoid",
            "baseName": "DomainGroupMoid",
            "type": "string",
            "format": ""
        },
        {
            "name": "modTime",
            "baseName": "ModTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "moid",
            "baseName": "Moid",
            "type": "string",
            "format": ""
        },
        {
            "name": "objectType",
            "baseName": "ObjectType",
            "type": "string",
            "format": ""
        },
        {
            "name": "owners",
            "baseName": "Owners",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "sharedScope",
            "baseName": "SharedScope",
            "type": "string",
            "format": ""
        },
        {
            "name": "tags",
            "baseName": "Tags",
            "type": "Array<MoTag>",
            "format": ""
        },
        {
            "name": "versionContext",
            "baseName": "VersionContext",
            "type": "MoVersionContext",
            "format": ""
        },
        {
            "name": "ancestors",
            "baseName": "Ancestors",
            "type": "Array<MoBaseMoRelationship>",
            "format": ""
        },
        {
            "name": "parent",
            "baseName": "Parent",
            "type": "MoBaseMoRelationship",
            "format": ""
        },
        {
            "name": "permissionResources",
            "baseName": "PermissionResources",
            "type": "Array<MoBaseMoRelationship>",
            "format": ""
        },
        {
            "name": "displayNames",
            "baseName": "DisplayNames",
            "type": "{ [key: string]: Array<string>; }",
            "format": ""
        },
        {
            "name": "clientId",
            "baseName": "ClientId",
            "type": "string",
            "format": ""
        },
        {
            "name": "clientName",
            "baseName": "ClientName",
            "type": "string",
            "format": ""
        },
        {
            "name": "clientSecret",
            "baseName": "ClientSecret",
            "type": "string",
            "format": ""
        },
        {
            "name": "clientType",
            "baseName": "ClientType",
            "type": "IamAppRegistrationRelationshipClientTypeEnum",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "Description",
            "type": "string",
            "format": ""
        },
        {
            "name": "grantTypes",
            "baseName": "GrantTypes",
            "type": "Array<IamAppRegistrationRelationshipGrantTypesEnum>",
            "format": ""
        },
        {
            "name": "redirectUris",
            "baseName": "RedirectUris",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "renewClientSecret",
            "baseName": "RenewClientSecret",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "responseTypes",
            "baseName": "ResponseTypes",
            "type": "Array<IamAppRegistrationRelationshipResponseTypesEnum>",
            "format": ""
        },
        {
            "name": "revocationTimestamp",
            "baseName": "RevocationTimestamp",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "revoke",
            "baseName": "Revoke",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "account",
            "baseName": "Account",
            "type": "IamAccountRelationship",
            "format": ""
        },
        {
            "name": "oauthTokens",
            "baseName": "OauthTokens",
            "type": "Array<IamOAuthTokenRelationship>",
            "format": ""
        },
        {
            "name": "permission",
            "baseName": "Permission",
            "type": "IamPermissionRelationship",
            "format": ""
        },
        {
            "name": "roles",
            "baseName": "Roles",
            "type": "Array<IamRoleRelationship>",
            "format": ""
        },
        {
            "name": "user",
            "baseName": "User",
            "type": "IamUserRelationship",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return IamAppRegistrationRelationship.attributeTypeMap;
    }
    
    public constructor() {
    }
}


export type IamAppRegistrationRelationshipClientTypeEnum = "public" | "confidential" ;
export type IamAppRegistrationRelationshipGrantTypesEnum = "authorization_code" | "refresh_token" | "client_credentials" | "implicit" | "password" | "urn:ietf:params:oauth:grant-type:jwt-bearer" | "urn:ietf:params:oauth:grant-type:saml2-bearer" ;
export type IamAppRegistrationRelationshipResponseTypesEnum = "code" | "token" ;

