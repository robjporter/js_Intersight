/**
 * Cisco Intersight
 * Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations. The Intersight OpenAPI document defines the complete set of properties that are returned in the HTTP response. From that perspective, a client can expect that no additional properties are returned, unless these properties are explicitly defined in the OpenAPI document. However, when a client uses an older version of the Intersight OpenAPI document, the server may send additional properties because the software is more recent than the client. In that case, the client may receive properties that it does not know about. Some generated SDKs perform a strict validation of the HTTP response body against the OpenAPI document. This document was created on 2020-05-14T14:50:55-07:00.
 *
 * OpenAPI spec version: 1.0.9-1731
 * Contact: intersight@cisco.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { UcsdConnectorPack } from './UcsdConnectorPack';
import { HttpFile } from '../http/http';

/**
* Definition of the list of properties defined in 'ucsd.BackupInfo', excluding properties defined in parent classes.
*/
export class UcsdBackupInfoAllOf {
    /**
    * Auto generated backup File Name with combination of file prefix given an user input and the timestamp.
    */
    'backupFileName'?: string;
    /**
    * Backup location that contains the backup images for end device which can be used for restore operation.
    */
    'backupLocation'?: string;
    /**
    * Backup server where backup images are maintained.
    */
    'backupServerIp'?: string;
    /**
    * Size of the backup image in bytes.
    */
    'backupSize'?: number;
    'connectors'?: Array<UcsdConnectorPack>;
    /**
    * Time taken for the backup to be completed.
    */
    'duration'?: number;
    /**
    * The key used for encrypting the backup file.
    */
    'encryptionKey'?: string;
    /**
    * Reason for backup failure.
    */
    'failureReason'?: string;
    /**
    * Backup image got purged or not. The backup images get purged based on the retention count set by the user in the backup config policy.
    */
    'isPurged'?: boolean;
    /**
    * Last modified time when this backup record got updated.
    */
    'lastModified'?: Date;
    /**
    * Backup current precentage completion status information.
    */
    'percentageCompletion'?: number;
    /**
    * The end device product version when the backup image was taken.
    */
    'productVersion'?: string;
    /**
    * Protocol used for the remote backup. possible values are FTP, SCP and SFTP. Not applicable for the localhost (127.0.0.1).
    */
    'protocol'?: string;
    /**
    * Backup current status stage information.
    */
    'stageCompletion'?: string;
    /**
    * Start time of backup when it got initiated.
    */
    'startTime'?: Date;
    /**
    * Current status of Backup current.
    */
    'status'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "backupFileName",
            "baseName": "BackupFileName",
            "type": "string",
            "format": ""
        },
        {
            "name": "backupLocation",
            "baseName": "BackupLocation",
            "type": "string",
            "format": ""
        },
        {
            "name": "backupServerIp",
            "baseName": "BackupServerIp",
            "type": "string",
            "format": ""
        },
        {
            "name": "backupSize",
            "baseName": "BackupSize",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "connectors",
            "baseName": "Connectors",
            "type": "Array<UcsdConnectorPack>",
            "format": ""
        },
        {
            "name": "duration",
            "baseName": "Duration",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "encryptionKey",
            "baseName": "EncryptionKey",
            "type": "string",
            "format": ""
        },
        {
            "name": "failureReason",
            "baseName": "FailureReason",
            "type": "string",
            "format": ""
        },
        {
            "name": "isPurged",
            "baseName": "IsPurged",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "lastModified",
            "baseName": "LastModified",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "percentageCompletion",
            "baseName": "PercentageCompletion",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "productVersion",
            "baseName": "ProductVersion",
            "type": "string",
            "format": ""
        },
        {
            "name": "protocol",
            "baseName": "Protocol",
            "type": "string",
            "format": ""
        },
        {
            "name": "stageCompletion",
            "baseName": "StageCompletion",
            "type": "string",
            "format": ""
        },
        {
            "name": "startTime",
            "baseName": "StartTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "status",
            "baseName": "Status",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return UcsdBackupInfoAllOf.attributeTypeMap;
    }
    
    public constructor() {
    }
}

