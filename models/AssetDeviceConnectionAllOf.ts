/**
 * Cisco Intersight
 * Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations. The Intersight OpenAPI document defines the complete set of properties that are returned in the HTTP response. From that perspective, a client can expect that no additional properties are returned, unless these properties are explicitly defined in the OpenAPI document. However, when a client uses an older version of the Intersight OpenAPI document, the server may send additional properties because the software is more recent than the client. In that case, the client may receive properties that it does not know about. Some generated SDKs perform a strict validation of the HTTP response body against the OpenAPI document. This document was created on 2020-05-14T14:50:55-07:00.
 *
 * OpenAPI spec version: 1.0.9-1731
 * Contact: intersight@cisco.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Definition of the list of properties defined in 'asset.DeviceConnection', excluding properties defined in parent classes.
*/
export class AssetDeviceConnectionAllOf {
    /**
    * The version of the connector API, describes the capability of the connector's framework. If the version is lower than the current minimum supported version defined in the service managing the connection, the device connector will be connected with limited capabilities until the device connector is upgraded to a fully supported version. For example if a device connector that was released without delta inventory capabilities registers and connects to Intersight, inventory collection may be disabled until it has been upgraded.
    */
    'apiVersion'?: number;
    /**
    * The partition number corresponding to the instance of the Proxy App which is managing the web-socket to the device connector.
    */
    'appPartitionNumber'?: number;
    /**
    * The unique identifier for the current connection. The identifier persists across network connectivity loss and is reset on device connector process restart or platform administrator toggle of the Intersight connectivity. The connectionId can be used by services that need to interact with stateful plugins running in the device connector process. For example if a service schedules an inventory in a devices job scheduler plugin at registration it is not necessary to reschedule the job if the device loses network connectivity due to an Intersight service upgrade or intermittent network issues in the devices datacenter.
    */
    'connectionId'?: string;
    /**
    * If 'connectionStatus' is not equal to Connected, connectionReason provides further details about why the device is not connected with Intersight.
    */
    'connectionReason'?: string;
    /**
    * The status of the persistent connection between the device connector and Intersight.
    */
    'connectionStatus'?: AssetDeviceConnectionAllOfConnectionStatusEnum;
    /**
    * The last time at which the 'connectionStatus' property value changed. If connectionStatus is Connected, this time can be interpreted as the starting time since which a persistent connection has been maintained between Intersight and Device Connector. If connectionStatus is NotConnected, this time can be interpreted as the last time the device connector was connected with Intersight.
    */
    'connectionStatusLastChangeTime'?: Date;
    /**
    * The version of the device connector running on the managed device.
    */
    'connectorVersion'?: string;
    /**
    * The IP Address of the managed device as seen from Intersight at the time of registration. This could be the IP address of the managed device's interface which has a route to the internet or a NAT IP addresss when the managed device is deployed in a private network.
    */
    'deviceExternalIpAddress'?: string;
    /**
    * The name of the app which will proxy the messages to the device connector.
    */
    'proxyApp'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "apiVersion",
            "baseName": "ApiVersion",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "appPartitionNumber",
            "baseName": "AppPartitionNumber",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "connectionId",
            "baseName": "ConnectionId",
            "type": "string",
            "format": ""
        },
        {
            "name": "connectionReason",
            "baseName": "ConnectionReason",
            "type": "string",
            "format": ""
        },
        {
            "name": "connectionStatus",
            "baseName": "ConnectionStatus",
            "type": "AssetDeviceConnectionAllOfConnectionStatusEnum",
            "format": ""
        },
        {
            "name": "connectionStatusLastChangeTime",
            "baseName": "ConnectionStatusLastChangeTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "connectorVersion",
            "baseName": "ConnectorVersion",
            "type": "string",
            "format": ""
        },
        {
            "name": "deviceExternalIpAddress",
            "baseName": "DeviceExternalIpAddress",
            "type": "string",
            "format": ""
        },
        {
            "name": "proxyApp",
            "baseName": "ProxyApp",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return AssetDeviceConnectionAllOf.attributeTypeMap;
    }
    
    public constructor() {
    }
}


export type AssetDeviceConnectionAllOfConnectionStatusEnum = "" | "Connected" | "NotConnected" | "ClaimInProgress" | "Unclaimed" ;

